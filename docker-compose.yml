version: "3"
services: 
  postgres: 
    image: postgres:latest 
    restart: always
    environment: 
      # A better approach would be to store the pass the password 
      # to postgres from a docker secret, but docker swarm must be enabled
      - POSTGRES_PASSWORD=postgres_password
  redis: 
    image: redis:latest
  nginx: 
    depends_on: 
      - api 
      - client
    restart: always
    build: 
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports: 
      - "8080:80"
  api: # /server
    depends_on: 
      - postgres
    build: 
      dockerfile: Dockerfile.dev
      context: ./server
    volumes: 
      # we want to use node_modules stored in docker containers b/c 
      # that's where we're running the application. 
      # This volume tells docker to not override the node_modules inside the container and use it for the app
      - /app/node_modules
      # create volume b/w server and app directories to see changes in real time inside container
      - .:/app 
    # pass environment variables server needs to connect to redis and postgres databases
    environment: 
      - REDIS_HOST=redis # name of image pulled from dockerhub
      - REDIS_PORT=6379 # default redis port
      - PGUSER=postgres
      - PGHOST=postgres 
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password # default postgres password
      - PGPORT=5432
  client:
    # need to stay connected to STDIN channel due to react bug
    stdin_open: true  
    build: 
      dockerfile: Dockerfile.dev
      context: ./client
    volumes: 
      - /app/node_modules
      - .:/app
  worker: 
    build: 
      dockerfile: Dockerfile.dev 
      context: ./worker 
    volumes: 
      - /app/node_modules
      - ./worker:/app
    environment: 
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    
      
      